{"version":3,"sources":["actions/index.js","constants/ActionTypes.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","reducers/tasks.js","reducers/display.js","reducers/editTask.js","reducers/filterTable.js","reducers/searchTask.js","reducers/sortTask.js","reducers/index.js","index.js"],"names":["editTask","task","type","TaskForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","event","name","target","value","setState","defineProperty","onSubmit","preventDefault","onSaveTask","state","onSubmitForm","onClear","taskName","status","onCloseForm","id","nextProps","display","react_default","a","createElement","className","onClick","required","Component","connect","dispatch","actions","Search","keyword","onSearch","placeholder","Sort","sortBy","sortValue","onSort","by","_this2","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","sort","sortTask","Control","components_Search","components_Sort","TaskItem","onUpdateStatus","onDelete","onDeleteTask","onEdit","onOpenForm","onEditTask","_this$props","classNames","btn-outline-success","btn-outline-dark","data-backdrop","data-keyboard","data-target","tasks","TaskList","filter","filterName","filterStatus","onFilterTable","filterTable","searchTask","key","toLowerCase","indexOf","b","elmTasks","map","item","index","components_TaskItem","App","onClearTask","localStorage","getItem","items","JSON","parse","_this$state","$","window","modal","role","components_TaskForm","components_Control","components_TaskList","Boolean","location","hostname","match","randomID","Math","floor","random","toString","data","initialState","myReducer","arguments","length","undefined","action","push","setItem","stringify","toConsumableArray","splice","parseInt","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8807113.chunk.js","sourcesContent":["import * as types from './../constants/ActionTypes'\r\n\r\nexport const listAll = () => {\r\n    return {\r\n        type: types.LIST_ALL\r\n    };\r\n}\r\n\r\nexport const saveTask = (task) => {\r\n    return {\r\n        type: types.SAVE_TASK,\r\n        task: task\r\n    }\r\n}\r\n\r\nexport const openForm = () => {\r\n    return {\r\n        type: types.OPEN_FORM\r\n    }\r\n};\r\n\r\nexport const editTask = (task) => {\r\n    return {\r\n        type: types.EDIT_TASK,\r\n        task: task\r\n    }\r\n};\r\n\r\nexport const submitForm = () => {\r\n    return {\r\n        type: types.SUBMIT_FORM\r\n    }\r\n};\r\n\r\nexport const closeForm = () => {\r\n    return {\r\n        type: types.CLOSE_FORM\r\n    }\r\n};\r\n\r\nexport const updateStatus = (id) => {\r\n    return {\r\n        type: types.UPDATE_STATUS_TASK,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const clearForm = () => {\r\n    return {\r\n        type: types.CLEAR_FORM\r\n    }\r\n};\r\n\r\nexport const filterTable = (filter) => {\r\n    return {\r\n        type: types.FILTER_TABLE,\r\n        filter: filter\r\n    }\r\n};\r\n\r\nexport const searchTask = (keyword) => {\r\n    return {\r\n        type: types.SEARCH_TASK,\r\n        keyword: keyword\r\n    }\r\n};\r\n\r\nexport const sortTask = (sort) => {\r\n    return {\r\n        type: types.SORT_TASK,\r\n        sort: sort\r\n    }\r\n};","export const LIST_ALL = 'LIST_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const CLEAR_FORM = 'CLEAR_FORM';\r\nexport const UPDATE_STATUS_TASK = 'UPDATE_STATUS_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const SEARCH_TASK = 'SEARCH_TASK';\r\nexport const SORT_TASK = 'SORT_TASK';","import React, { Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index'\r\nclass TaskForm extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      taskName: '',\r\n      status: false\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    if(this.props.editTask && this.props.editTask.id !== \"\")\r\n    {\r\n     this.setState({\r\n        id: this.props.editTask.id,\r\n        taskName: this.props.editTask.taskName,\r\n        status: this.props.editTask.status\r\n      })\r\n    }\r\n    else {\r\n      this.onClear();\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps && nextProps.editTask)\r\n    {\r\n     this.setState({\r\n        id: this.props.editTask.id,\r\n        taskName: this.props.editTask.taskName,\r\n        status: this.props.editTask.status\r\n      })\r\n    }\r\n    else {\r\n      this.onClear();\r\n    }\r\n  }\r\n  onChange = (event) => {\r\n    var name = event.target.name;\r\n    var value = event.target.value;\r\n    if(name === 'status') \r\n    value === 'false' ? value = false : value = true;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSaveTask(this.state);\r\n    this.props.onSubmitForm(); \r\n    this.onClear(); \r\n  }\r\n  onClear = () => {\r\n    this.setState({\r\n      taskName: '',\r\n      status: false\r\n    });\r\n  }\r\n  onCloseForm = () => {\r\n    this.onClear();\r\n    this.props.onCloseForm();\r\n  };\r\n  render(){\r\n    var {display} = this.props;\r\n    \r\n    return(\r\n          \r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header header-taskform \">\r\n                  <h4 className=\"modal-title\">\r\n                  {this.props.editTask.id ? 'Sửa công việc' : 'Thêm công việc'}</h4>\r\n                  <button type=\"button\" onClick={this.onCloseForm} className=\"close\" >&times;</button>\r\n                </div>\r\n                <form onSubmit={this.onSubmit}>\r\n                  \r\n                <div className=\"modal-body\">\r\n                  <div className=\"form-group\">\r\n                    <label>Tên: </label>\r\n                    <input required type=\"text\" className=\"form-control\" \r\n                    name=\"taskName\"  value={this.state.taskName} onChange={this.onChange}/>\r\n                  </div>\r\n                    <label>Trạng thái: </label>\r\n                    <select className=\"form-control\" name=\"status\"\r\n                    value={this.state.status} onChange={this.onChange}>\r\n                      <option value={true}>Kích hoạt</option>\r\n                      <option value={false}>Ẩn</option>\r\n                    </select><br/>             \r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-warning\" type=\"submit\">Lưu lại</button>\r\n                  <button type=\"button\" className=\"btn btn-default\" onClick={this.onClear}>Hủy</button>\r\n                </div>\r\n                </form>\r\n              </div>\r\n\r\n            \r\n      \r\n    );\r\n    \r\n   \r\n  }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    display: state.display,\r\n    editTask: state.editTask\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch, props) => {\r\n  return {\r\n    onSaveTask: (task) => {\r\n      dispatch(actions.saveTask(task));\r\n    },\r\n    onSubmitForm: () => {\r\n      dispatch(actions.submitForm());\r\n    },\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TaskForm);\r\n\r\n","import React, { Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass Search extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      keyword: ''\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    this.setState({\r\n      keyword : event.target.value\r\n    });\r\n  };\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  };\r\n  render(){\r\n    const { keyword } = this.state;\r\n    return(\r\n            <div className=\"col-md-6\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"keyword\"\r\n                    value={keyword} onChange={this.onChange} placeholder=\"Nhập từ khóa...\"/>\r\n                    <button onClick={this.onSearch} className=\"btn btn-primary\" type=\"submit\">Tìm</button>\r\n                </div>           \r\n            </div>\r\n            \r\n    );\r\n    \r\n   \r\n  }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch, props) => {\r\n  return {\r\n    onSearch: (keyword) => {\r\n      dispatch(actions.searchTask(keyword));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Search);\r\n","import React, { Component} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index';\r\n\r\nclass Sort extends Component{\r\n\r\n  onClick= (sortBy, sortValue) => {\r\n    this.props.onSort({\r\n      by: sortBy,\r\n      value: sortValue});\r\n  };\r\n  render(){\r\n    return(\r\n            <div className=\"col-md-6\">\r\n              <div className=\"dropdown\">\r\n              <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Sắp xếp\r\n              </button>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <a className=\"dropdown-item\" href=\"#\" onClick={ () => this.onClick('name', 1)}>\r\n                  Tên A->Z\r\n                  </a>\r\n                <a className=\"dropdown-item\" href=\"#\" onClick={ () => this.onClick('name', -1)}>\r\n                  Tên Z->A\r\n                  </a>\r\n                <a className=\"dropdown-item\" href=\"#\" onClick={ () => this.onClick('status', 1)}>\r\n                  Trạng thái Kích hoạt\r\n                  </a>\r\n                <a className=\"dropdown-item\" href=\"#\" onClick={ () => this.onClick('status', -1)}>\r\n                  Trạng thái Ẩn\r\n                  </a>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            \r\n    );\r\n    \r\n   \r\n  }\r\n}\r\n\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    sort: state.sortTask\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch, props) => {\r\n  return {\r\n    onSort: (sort) => {\r\n      dispatch(actions.sortTask(sort));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Sort);\r\n\r\n\r\n","import React, { Component} from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\nclass Control extends Component{\r\n  constructor() {\r\n    super();\r\n\r\n  }\r\n  \r\n  \r\n  render(){\r\n    return(\r\n        <div className=\"row mt-3\">\r\n        <Search  />  \r\n        <Sort />\r\n        </div>\r\n            \r\n    );\r\n    \r\n   \r\n  }\r\n}\r\n\r\nexport default Control;\r\n\r\n","import React, { Component} from \"react\";\r\nimport classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index'\r\nclass TaskItem extends Component{\r\n  constructor() {\r\n    super();\r\n\r\n  }\r\n  \r\n  onUpdateStatus = () => {\r\n    return this.props.onUpdateStatus(this.props.task.id);\r\n  }\r\n  onDelete = () => {\r\n    return this.props.onDeleteTask(this.props.id); //dispatch action\r\n  }\r\n  onEdit = () => {\r\n    this.props.onOpenForm();\r\n    this.props.onEditTask(this.props.task);\r\n  }\r\n  render(){\r\n      var {task, id} = this.props;\r\n    return(\r\n        <tr>\r\n            <td>{id}</td>\r\n            <td>{task.taskName}</td>\r\n            <td>\r\n            <span onClick={this.onUpdateStatus} \r\n            className ={classNames('btn', {'btn-outline-success': task.status}, \r\n            {'btn-outline-dark': !task.status})}>\r\n            {task.status === true ? 'Kích hoạt' : 'Ẩn'}</span>\r\n            </td>\r\n            <td>\r\n            <button data-backdrop=\"static\" data-keyboard=\"false\" data-toggle=\"modal\" data-target=\"#myModal\" onClick={this.onEdit} className=\"btn btn-warning\" type=\"submit\">Sửa</button>\r\n            <button onClick={this.onDelete} className=\"btn btn-danger\" type=\"submit\">Xóa</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n    \r\n   \r\n  }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    display: state.display,\r\n    tasks: state.tasks\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch, props) => {\r\n  return {\r\n    onOpenForm: () => {\r\n      dispatch(actions.openForm());\r\n    },\r\n    onUpdateStatus: (id) => {\r\n      dispatch(actions.updateStatus(id));\r\n    },\r\n    onDeleteTask: (id) => {\r\n      dispatch(actions.deleteTask(id));\r\n    },\r\n    onEditTask: (task) => {\r\n      dispatch(actions.editTask(task));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TaskItem);\r\n\r\n","import React, { Component} from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../actions/index'\r\n\r\nclass TaskList extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      filterName: '',\r\n      filterStatus: -1\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n    let filter = {\r\n      filterName: name === 'filterName' ? value : this.state.filterName,\r\n      filterStatus: name === 'filterStatus' ? value : this.state.filterStatus\r\n    };\r\n    this.props.onFilterTable(filter)\r\n  }\r\n  render(){\r\n    var { tasks, filterTable, searchTask, sort } = this.props;\r\n    if(filterTable.filterName)\r\n    {\r\n      tasks = tasks.filter((key) => {\r\n         return key.taskName.toLowerCase().indexOf(filterTable.filterName) !== -1;\r\n       \r\n      });\r\n    }\r\n    tasks = tasks.filter((key) =>{\r\n      if(filterTable.filterStatus === -1) return key;\r\n      else  return key.status === (filterTable.filterStatus === 0 ? false : true);\r\n    });\r\n    tasks = tasks.filter((key) => {\r\n      return key.taskName.toLowerCase().indexOf(searchTask) !== -1;\r\n    });\r\n    \r\n    if(sort.by === 'name')\r\n    {\r\n      tasks.sort((a, b) => {\r\n        if(a.taskName > b.taskName) return sort.value;\r\n        else if(a.taskName < b.taskName) return -sort.value;\r\n        else return 0;\r\n      });\r\n    } else {\r\n      tasks.sort((a, b) => {\r\n        if(a.status > b.status) return -sort.value;\r\n        else if(a.status < b.status) return sort.value;\r\n        else return 0;\r\n      });\r\n    }\r\n\r\n    var elmTasks = tasks.map((item, index) => {\r\n      return <TaskItem key={index} id={index} task={item} />\r\n    }); \r\n\r\n\r\n    return(\r\n        <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n               <table className=\"table table-borderd table-hover mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th>STT</th>\r\n                  <th>Tên</th>\r\n                  <th>Trạng thái</th>\r\n                  <th>Hành động</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td></td>\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" name=\"filterName\"\r\n                    value={this.state.filterName} onChange={this.onChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <select className=\"form-control\" name=\"filterStatus\"\r\n                    value={this.state.filterStatus} onChange={this.onChange} >\r\n                      <option value={-1}>Tất cả</option>\r\n                      <option value={0}>Ẩn</option>\r\n                      <option value={1}>Kích hoạt</option>\r\n                    </select>\r\n                  </td>\r\n                  <td></td>\r\n                </tr>\r\n                \r\n                {elmTasks}\r\n              </tbody>\r\n            </table>\r\n                </div>\r\n        </div>\r\n            \r\n    );\r\n    \r\n   \r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    filterTable: state.filterTable,\r\n    searchTask: state.searchTask,\r\n    sort: state.sortTask\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch, props) => {\r\n  return {\r\n    onFilterTable: (filter) => {\r\n      dispatch(actions.filterTable(filter));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(TaskList);\r\n","import React, { Component} from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index'\nclass App extends Component{\n  \n  componentWillMount() {\n    if(localStorage && localStorage.getItem('tasks')) {\n      let items = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: items\n      })\n    }\n  }\n\n\n\n\n  onOpenForm = () => {\n    this.props.onOpenForm();\n    this.props.onClearTask({\n      id: '',\n      name: '',\n      status: false\n    }\n    );\n  }\n\n  render(){\n    var { tasks, keyword} = this.state;\n    var { display } = this.props;\n    const $ = window.$;\n    if(display) {\n      $(\"#myModal\").modal('show');\n    }\n    else {\n      $(\"#myModal\").modal('hide');\n    }\n    \n    \n    \n    return(\n      <div className=\"App\">\n      <div className=\"container\">\n           <div className=\"page-title text-center\">Quản lý công việc</div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" \n         data-backdrop=\"static\" data-keyboard=\"false\"\n        onClick={this.onOpenForm} data-target=\"#myModal\">Thêm mới</button>\n          {/* <button className=\"btn btn-primary\" onClick={this.onGenerate} type=\"submit\">Tạo key</button> */}\n          <div id=\"myModal\" className=\"modal fade\" role=\"dialog\">\n          <div className=\"modal-dialog\">\n            {\n             display ? \n            <TaskForm \n           /> : null\n            }\n          </div>\n          </div>\n            <Control  />\n            <TaskList />\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n    \n   \n  }\n}\n\n\nconst mapStatetoProps = (state) => {\n  return {\n    display: state.display\n  };\n};\n\nconst mapDispatchtoProps = (dispatch, props) => {\n  return {\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    }\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from './../constants/ActionTypes'\r\n\r\nvar randomID = () => {\r\n    return Math.floor((Math.random()*0x10000)+1).toString(16);\r\n  }\r\nvar generateID = () => {\r\n    return randomID() + randomID() + randomID() + '-' \r\n    + randomID() + randomID() + randomID();\r\n  }\r\n\r\nvar data = JSON.parse(localStorage.getItem('tasks'));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.LIST_ALL:\r\n            return state;\r\n        case types.SAVE_TASK:\r\n            var task = {\r\n                id: action.task.id,\r\n                taskName: action.task.taskName,\r\n                status: action.task.status\r\n            };\r\n            if(!task.id) {\r\n              task.id = generateID();\r\n              state.push(task);\r\n            } else {\r\n              var rs = state.map((key, index) => {\r\n                if(key.id === action.task.id) {\r\n                  state[index] = task;\r\n                }\r\n              })\r\n            }\r\n            localStorage.setItem('tasks', JSON.stringify(state));\r\n            return [...state];\r\n        case types.UPDATE_STATUS_TASK:\r\n            var result = state.map((key, index) => {\r\n              if(key.id === action.id) {\r\n                state[index].status = !state[index].status;\r\n                localStorage.setItem('tasks', JSON.stringify(state));    \r\n              }\r\n            });\r\n            return [...state];\r\n        case types.DELETE_TASK:\r\n            var result = state.map((key, index) => {\r\n              if(index === action.id) {\r\n                state.splice(index, 1);\r\n                localStorage.setItem('tasks', JSON.stringify(state));    \r\n              }\r\n            });\r\n            return [...state];\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from './../constants/ActionTypes'\r\n\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.OPEN_FORM:\r\n            state = true;\r\n            return state;\r\n        case types.SUBMIT_FORM:\r\n            state = false;\r\n            return state;\r\n        case types.CLOSE_FORM:\r\n            state = false;\r\n            return state;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","    import * as types from '../constants/ActionTypes'\r\n\r\n\r\nvar initialState = {\r\n    id: '',\r\n    taskName: '',\r\n    status: false\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.EDIT_TASK:\r\n            return action.task;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes'\r\n\r\nvar initialState = {\r\n    filterName: '',\r\n    filterStatus: -1\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.FILTER_TABLE:\r\n            return {\r\n                filterName: action.filter.filterName,\r\n                filterStatus: parseInt(action.filter.filterStatus, 10)\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes'\r\n\r\nvar initialState = '';\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SEARCH_TASK:\r\n            return action.keyword.toLowerCase();\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import * as types from '../constants/ActionTypes'\r\n\r\nvar initialState = {\r\n    by: 'name',\r\n    value: 1 // tăng\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case types.SORT_TASK:\r\n            return {\r\n                by: action.sort.by,\r\n                value: parseInt(action.sort.value, 10)\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default myReducer;","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport display from './display';\r\nimport editTask from './editTask';\r\nimport filterTable from './filterTable';\r\nimport searchTask from './searchTask';\r\nimport sortTask from './sortTask';\r\n\r\nconst myReducer = combineReducers({\r\n    tasks: tasks,\r\n    display: display,\r\n    editTask: editTask,\r\n    filterTable: filterTable,\r\n    searchTask: searchTask,\r\n    sortTask: sortTask\r\n});\r\n\r\nexport default myReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport myReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(myReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n            <Provider store = { store } >\n                <App />\n            </Provider>,\n            document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}